import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Date;

public class Main {

    private static String FILE = "/home/shine/Desktop/test.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    public static void main(String[] args) {
        try {
            Document document = new Document();

            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private static void addMetaData(Document document) {
        document.addTitle("First PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Sudipto shahin");
        document.addCreator("Sudipto Shahin");
    }

    private static void addTitlePage(Document document) throws DocumentException {
        Paragraph preface = new Paragraph();
        //  add one empty line
        addEmptyLine(preface, 1);

        preface.add(new Paragraph("Title of the document", catFont));

        addEmptyLine(preface, 1);

        // will create : report grnerated by name date
        preface.add(new Paragraph("Report generated by: " +System.getProperty("user.name")+ ", "+ new Date(), smallBold));

        addEmptyLine(preface, 8);
        preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with shine.", redFont));

        document.add(preface);
        document.newPage();
    }

    private static void addContent(Document document) throws DocumentException{
        Anchor anchor = new Anchor("First Chapter", catFont);
        anchor.setName("First chapter");

        //  second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);


        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Hello"));

        subPara = new Paragraph("Subcategory 2", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Paragraph 1"));
        subCatPart.add(new Paragraph("Paragraph 2"));
        subCatPart.add(new Paragraph("Paragraph 3"));

        //  add a list
        createList(subCatPart);

        //  now add all this to the document
        document.add(catPart);

        //  next section
        anchor = new Anchor("Second Chapter", catFont);
        anchor.setName("Second Chapter");

        //  second parameter is the number of the chapter
        catPart = new Chapter(new Paragraph(anchor), 1);

        subPara = new Paragraph("Subcategory", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("This is a very important message"));

        //  now add all this to the document
        document.add(catPart);
    }

    private static void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i=0; i<number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
